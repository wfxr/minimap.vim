*minimap-vim.txt* Blazing fast minimap for vim, powered by code-minimap
*minimap*

=============================================================================
CONTENTS                                                          *minimap-toc*

  1. Commands.................................|minimap-commands|
  2. Options..................................|minimap-options|
  3. FAQ......................................|minimap-FAQ|

=============================================================================
1. Commands                                                  *minimap-commands*

Minimap                                                               *Minimap*

  Show minimap window

MinimapClose                                                     *MinimapClose*

  Close minimap window

MinimapToggle                                                   *MinimapToggle*

  Toggle minimap window

MinimapRefresh                                                 *MinimapRefresh*

  Force refresh minimap window

MinimapUpdateHighlight                                 *MinimapUpdateHighlight*

  Force update minimap window

=============================================================================
2. Options                                                    *minimap-options*

g:minimap_left                                                 *g:minimap_left*

  Type: |Number|
  Default: `0`

  If set to `1`, the minimap window will append to the left.

g:minimap_width                                               *g:minimap_width*

  Type: |Number|
  Default: `10`

  The width of the minimap window in characters.

g:minimap_highlight                                       *g:minimap_highlight*

  Type: |String|
  Default: `'Title'`

  The color of the highlighting for the current position. Possible values
  are any |group-name|.

g:minimap_highlight_range                           *g:minimap_highlight_range*

  Type: |Number|
  Default: `0`

  If set to `1`, the minimap window will highlight over a range of lines
  representing the visible lines in the buffer.

g:minimap_win_scrolled_exists                   *g:minimap_win_scrolled_exists*

  Type: |Number|
  Default: `0`

  If both this and `g:minimap_highlight_range` are set to `1`, the minimap
  will update on the autocmd event `WinScrolled`.  This autocmd was only
  added into versions of Neovim after November 7, 2020.  Use this only
  if you have a version of Neovim with the autocmd!

g:minimap_auto_start                                     *g:minimap_auto_start*

  Type: |Number|
  Default: `0`

  If set to `1`, the minimap window will show on startup.

g:minimap_auto_start_win_enter                 *g:minimap_auto_start_win_enter*

  Type: |Number|
  Default: `0`

  If both this and `g:minimap_auto_start` are set to `1`, the minimap window
  will show on `WinEnter`.

g:minimap_block_filetypes                           *g:minimap_block_filetypes*

  Type: |Array|
  Default: `['fugitive', 'nerdtree', 'tagbar']`

  Disable minimap for specific file types.

g:minimap_block_buftypes                             *g:minimap_block_buftypes*

  Type: |Array|
  Default: `['nofile', 'nowrite', 'quickfix', 'terminal', 'prompt']`

  Disable minimap for specific buffer types.

g:minimap_close_filetypes                           *g:minimap_close_filetypes*

  Type: |Array|
  Default: `['startify', 'netrw', 'vim-plug']`

  Close minimap for specific file types.  If a filetype listed here is also
  present in `g:minimap_block_filetypes`, the minimap will prefer to close
  rather than disable.

g:minimap_close_buftypes                             *g:minimap_close_buftypes*

  Type: |Array|
  Default: `[]`

  Close minimap for specific buffer types.  If a filetype listed here is also
  present in `g:minimap_block_buftypes`, the minimap will prefer to close
  rather than disable.

g:minimap_base_highlight                             *g:minimap_base_highlight*

  Type: |String|
  Default: `'Normal'`

  The base color group for minimap. Possible values are any |group-name|.

=============================================================================
3. FAQ                                                            *minimap-FAQ*

|Q:|
  Highlight and scrolling are not working properly.

|A:|
  Check the vim version you are using. minimap.vim requires vim 8.1.1084+ or
  neovim 0.5.0+.


|Q:|
  Integrated with diagnostics or git status plugins?

|A:|
  Not implemented currently but it should be possible in the future.


|Q:|
  Minimap window is too wide for me, how to use it as a simple scrollbar?

|A:|
  You can reduce the width of the minimap window:

      let g:minimap_width = 2


|Q:|
  I don't like the default highlight group, how to change it?

|A:|
  Choose any one of the highlight groups (or define a new one) and just set it
  for minimap like this:

      hi MinimapCurrentLine ctermfg=Green guifg=#50FA7B guibg=#32302f
      let g:minimap_highlight = 'MinimapCurrentLine'


|Q:|
  Minimap shows up as a jumble of characters?

|A:|
  Check that your encoding is set to `utf-8` and not `latin1` (for Vim users),
  and check that you're using a font that is Unicode-compatible.


|Q:|
  What is `g:minimap_win_scrolled_exists` and how do you use it?

|A:|
  You can have the minimap highlight all the visible lines in your current window
  by setting `g:minimap_highlight_range`.  If you use Neovim, and your version
  is recent enough (after November 7, 2020), you can set this option to update
  the highlight when the window is scrolled.


LICENSE                                                       *minimap-license*
=============================================================================

The MIT License (MIT)

Copyright (c) 2020 Wenxuan Zhang

=============================================================================
vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
